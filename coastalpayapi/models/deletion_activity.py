# -*- coding: utf-8 -*-

"""
coastalpayapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from coastalpayapi.api_helper import APIHelper
import os
from coastalpayapi.utilities.schema_validator_wrapper import SchemaValidatorWrapper
from jsonschema import ValidationError


class DeletionActivity(object):

    """Implementation of the 'DeletionActivity' model.

    TODO: type model description here.

    Attributes:
        id (int): Activity Id
        deleted_id (int): User Id
        deleted_at (datetime): Date of deletion (Y-m-d\TH:i:sP)
        undeleted_id (int): User Id
        undeleted_at (datetime): Date of undeletion (Y-m-d\TH:i:sP)

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "deleted_id": 'deletedId',
        "deleted_at": 'deletedAt',
        "undeleted_id": 'undeletedId',
        "undeleted_at": 'undeletedAt'
    }

    _optionals = [
        'id',
        'deleted_id',
        'deleted_at',
        'undeleted_id',
        'undeleted_at',
    ]

    def __init__(self,
                 id=APIHelper.SKIP,
                 deleted_id=APIHelper.SKIP,
                 deleted_at=APIHelper.SKIP,
                 undeleted_id=APIHelper.SKIP,
                 undeleted_at=APIHelper.SKIP):
        """Constructor for the DeletionActivity class"""

        # Initialize members of the class
        if id is not APIHelper.SKIP:
            self.id = id 
        if deleted_id is not APIHelper.SKIP:
            self.deleted_id = deleted_id 
        if deleted_at is not APIHelper.SKIP:
            self.deleted_at = APIHelper.RFC3339DateTime(deleted_at) if deleted_at else None 
        if undeleted_id is not APIHelper.SKIP:
            self.undeleted_id = undeleted_id 
        if undeleted_at is not APIHelper.SKIP:
            self.undeleted_at = APIHelper.RFC3339DateTime(undeleted_at) if undeleted_at else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        deleted_id = dictionary.get("deletedId") if dictionary.get("deletedId") else APIHelper.SKIP
        deleted_at = APIHelper.RFC3339DateTime.from_value(dictionary.get("deletedAt")).datetime if dictionary.get("deletedAt") else APIHelper.SKIP
        undeleted_id = dictionary.get("undeletedId") if dictionary.get("undeletedId") else APIHelper.SKIP
        undeleted_at = APIHelper.RFC3339DateTime.from_value(dictionary.get("undeletedAt")).datetime if dictionary.get("undeletedAt") else APIHelper.SKIP
        # Return an object of this model
        return cls(id,
                   deleted_id,
                   deleted_at,
                   undeleted_id,
                   undeleted_at)

    @classmethod
    def validate(cls, val):
        """Validates value against class schema

        Args:
            val: the value to be validated

        Returns:
            boolean : if value is valid against schema.

        """
        file_name = os.path.basename(__file__).removesuffix(".py")
        return SchemaValidatorWrapper.getValidator(APIHelper.get_schema_path(os.path.abspath(__file__), file_name)).is_valid(val)
